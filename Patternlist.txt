CHAR 
HARDWARE BINARY -> ASSIC VALUES

char a = 103;
char A = 65;

pattern 1

AAAAA
AAAAA
AAAAA
AAAAA
AAAAA

2 logic 
int loop 
char loop
0 to 255


pattern2 :

ABCDE
ABCDE
ABCDE
ABCDE
ABCDE

Pattern3:

AAAAA  11111
BBBBB  22222
CCCCC  33333
DDDDD  44444
EEEEE  55555


pattern4

A*C*E
A*C*E
A*C*E
A*C*E
A*C*E


pattern5
 
n = 5
AAAAA  i = 1 - > 11111 j - > 12345   new line println()
*****  i = 2 - > 22222 j - > 12345
CCCCC  i = 3 - > 33333 j - > 12345
*****  i = 4 - > 44444 j - > 12345
EEEEE  i = 5 - > 55555 j - > 12345

pattern6:

AAAAA
A   A
A   A
A   A
AAAAA


*****    i = 1 - > 11111 j - > 12345
*   *    i = 2 - > 22222 j - > 12345
* * *    i = 3 - > 33333 j - > 12345
*   *    i = 4 - > 44444 j - > 12345
*****    i = 5 - > 55555 j - > 12345


pattern7


AAAAA
A   A
A A A
A   A
AAAAA


Pattern8:


A         i = 1 - > 11111 j = 1 - > 1
AA        i = 2 - > 22222 j = 2 - > 12
AAA       i = 3 - > 33333 j = 3 - > 123
AAAA	  i = 4 - > 44444 j = 4 - > 1234
AAAAA	  i = 5 - > 55555 j = 5 - > 12345



A
AB
ABC
ABCD
ABCDE

A
BA
CBA
DCBA
EDCBA


ABCDE
ABCD
ABC
AB
A

A*C*E
A*C*
A*C
A*
A


AAAAA
BBBB
CCC
DD
E



AAAAA
****
CCC
**
E


A B C D E
B C D E
C D E
D E
E


12345 i = 5, j = 54321
2345  i = 4, j = 5432
345   i = 3, j = 543
45    i = 2, j = 54
5     i = 1, j = 5


* B * D *
B * D *
* D *
D *
*


    *
   **
  ***
 ****
*****



    1
   12
  123
 1234
12345


    *
   ***
  *****
 *******
*********


    1
   222
  33333
 4444444
555555555



    1
   121
  12321
 1234321
123454321


    *
   *2*
  *2*2*
 *2*4*2*
*2*4*4*2*




*********
 *******
  *****
   ***
    *




* 
* * 
* * * 
* * * * 
* * * * * 
* * * * 
* * * 
* * 
*




* 
* * 
* * * 
* * * *  
* * * * *
* * * * 
* * * 
* * 
*

*
* *
*






        * 
      * * * 
    * * * * * 
  * * * * * * *
* * * * * * * * *
  * * * * * * *
    * * * * *
      * * *  
        *  




        * 
        *  
        *  
        * 
* * * * * * * * *
        * 
        *  
        *   
        * 
      

  * * *
* * * * *
  * * * 
* * * * *
  * * *




        * 
      * * * 
    * * * * * 
  * * * * * * *
* * * * * * * * *
  * * * * * * *
    * * * * *
      * * *  
        *  




        * 
        *  
        *  
        * 
* * * * * * * * *
        * 
        *  
        *   
        * 

      

        1 
      1 2 1 
    1 2 3 2 1 
  1 2 3 4 3 2 1
1 2 3 4 5 4 3 2 1
  1 2 3 4 3 2 1
    1 2 3 2 1
      1 2 1  
        1  





  * * *
* * * * *
  * * * 
* * * * *
  * * *


        
    * * * * *
  * * * * * * *
* * * * * * * * *
  * * * * * * *
    * * * * * 
      * * *
        *

n = 5

A B C D E D C B A
  B C D E D C B
    C D E D C 
      D E D
        E


n = 5

A
A B
A B C
A B C D
A B C D E
A B C D
A B C
A B 
A

n = 5

5 5 5 5 5 5 5 5 5
5 4 4 4 4 4 4 4 5
5 4 3 3 3 3 3 4 5
5 4 3 2 2 2 3 4 5
5 4 3 2 1 2 3 4 5
5 4 3 2 2 2 3 4 5
5 4 3 3 3 3 3 4 5
5 4 4 4 4 4 4 4 5
5 5 5 5 5 5 5 5 5





n = 5


* * * * * * * * *
  * * * * * * *
    * * * * *
      * * *
        *
      * * *
    * * * * * 
  * * * * * * *
* * * * * * * * *


